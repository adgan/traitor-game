name: Build and Push Docker Image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
          platforms: linux/amd64
          build-args: |
            BUILD_NUMBER=${{ github.run_number }}-${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
          provenance: true
          labels: |
              org.opencontainers.image.source=${{ github.repository }}
              org.opencontainers.image.revision=${{ github.sha }}
              org.opencontainers.image.authors=${{ github.actor }}
              org.opencontainers.image.url=https://github.com/${{ github.repository }}
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Redeploy via webhook
        env:
          REDEPLOY_WEBHOOK: ${{ secrets.REDEPLOY_WEBHOOK }}
        run: |
          if [ -n "$REDEPLOY_WEBHOOK" ]; then
            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$REDEPLOY_WEBHOOK")
            BODY=$(echo "$RESPONSE" | head -n -1)
            STATUS=$(echo "$RESPONSE" | tail -n1)
            echo "Redeploy webhook response: $BODY"
            if echo "$BODY" | grep -q 'Error updating service'; then
              echo "[ERROR] Container update failed: $BODY" >&2
              exit 2
            fi
            if [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 300 ]; then
              echo "Redeploy webhook triggered successfully."
              # Check if the service is reachable after redeploy
              sleep 5
              HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://traitor.reiqu.de/")
              if [ "$HEALTH_STATUS" -eq 200 ]; then
                echo "Service is reachable (HTTP 200)."
                exit 0
              else
                echo "[ERROR] Service is not reachable after redeploy (HTTP $HEALTH_STATUS)" >&2
                exit 3
              fi
            else
              echo "[ERROR] Redeploy webhook failed with status $STATUS" >&2
              exit 1
            fi
          else
            echo "No redeploy webhook set."
            exit 1
          fi