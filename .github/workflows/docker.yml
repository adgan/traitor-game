name: Node Build, Docker Build & Deploy

on:
  workflow_dispatch:

jobs:
  build-node:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js app
        run: npm run build
      - name: List files for debug
        run: ls -al . && ls -al .next
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            .next
            node_modules
            public
            package.json
            next.config.*
            postcss.config.*
            tailwind.config.*
            src

  build-docker:
    runs-on: ubuntu-latest
    needs: build-node
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: .
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
          platforms: linux/amd64
          build-args: |
            BUILD_NUMBER=${{ github.run_number }}-${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
          provenance: true
          labels: |
              org.opencontainers.image.source=${{ github.repository }}
              org.opencontainers.image.revision=${{ github.sha }}
              org.opencontainers.image.authors=${{ github.actor }}
              org.opencontainers.image.url=https://github.com/${{ github.repository }}
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    environment: production
    steps:
      - name: Redeploy via webhook
        env:
          REDEPLOY_WEBHOOK: ${{ secrets.REDEPLOY_WEBHOOK }}
        run: |
          if [ -n "$REDEPLOY_WEBHOOK" ]; then
            curl -X POST "$REDEPLOY_WEBHOOK"
            echo "Redeploy webhook triggered successfully."
            exit 0
          else
            echo "No redeploy webhook set."
            exit 1
          fi
